import 'package:beatboks/state/themecolor_signal.dart';
import 'package:beatboks/state/themefont_signal.dart';
import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/material.dart';
import 'package:signals/signals.dart';

final Computed<ThemeData> cLightTheme = computed<ThemeData>(() {
  return FlexThemeData.light(
    // Scheme is chosen by the user.
    scheme: cColor.value,
    surfaceMode: FlexSurfaceMode.highScaffoldLowSurface,
    blendLevel: 10,
    appBarStyle: FlexAppBarStyle.background,
    bottomAppBarElevation: 1,
    subThemesData: const FlexSubThemesData(
      blendOnLevel: 20,
      blendTextTheme: true,
      useTextTheme: true,
      thinBorderWidth: 2,
      thickBorderWidth: 4,
      elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
      elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
      outlinedButtonOutlineSchemeColor: SchemeColor.primary,
      toggleButtonsBorderSchemeColor: SchemeColor.primary,
      segmentedButtonSchemeColor: SchemeColor.primary,
      segmentedButtonBorderSchemeColor: SchemeColor.primary,
      unselectedToggleIsColored: true,
      sliderValueTinted: true,
      sliderTrackHeight: 5,
      inputDecoratorBorderType: FlexInputBorderType.underline,
      inputDecoratorUnfocusedBorderIsColored: false,
      fabUseShape: true,
      fabAlwaysCircular: true,
      chipRadius: 10,
      popupMenuRadius: 6,
      popupMenuElevation: 6,
      alignedDropdown: true,
      useInputDecoratorThemeInDialogs: true,
      appBarScrolledUnderElevation: 8,
      drawerWidth: 280,
      drawerIndicatorSchemeColor: SchemeColor.primary,
      bottomNavigationBarMutedUnselectedLabel: false,
      bottomNavigationBarMutedUnselectedIcon: false,
      menuRadius: 6,
      menuElevation: 6,
      menuBarRadius: 0,
      menuBarElevation: 1,
      navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
      navigationBarMutedUnselectedLabel: false,
      navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationBarMutedUnselectedIcon: false,
      navigationBarIndicatorSchemeColor: SchemeColor.primary,
      navigationBarIndicatorOpacity: 1,
      navigationBarElevation: 2,
      navigationBarHeight: 70,
      navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
      navigationRailMutedUnselectedLabel: false,
      navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationRailMutedUnselectedIcon: false,
      navigationRailIndicatorSchemeColor: SchemeColor.primary,
      navigationRailIndicatorOpacity: 1,
    ),
    keyColors: const FlexKeyColors(
      useTertiary: true,
      keepPrimary: true,
      keepTertiary: true,
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    useMaterial3: true,
    swapLegacyOnMaterial3: true,
    // Font is chosen by the user.
    fontFamily: cFont.value,
  );
});

final Computed<ThemeData> cDarkTheme = computed<ThemeData>(() {
  return FlexThemeData.dark(
    // Scheme is chosen by the user.
    scheme: cColor.value,
    surfaceMode: FlexSurfaceMode.highScaffoldLowSurface,
    blendLevel: 15,
    appBarStyle: FlexAppBarStyle.background,
    bottomAppBarElevation: 2,
    subThemesData: const FlexSubThemesData(
      blendOnLevel: 40,
      blendTextTheme: true,
      useTextTheme: true,
      thinBorderWidth: 2,
      thickBorderWidth: 4,
      elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
      elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
      outlinedButtonOutlineSchemeColor: SchemeColor.primary,
      toggleButtonsBorderSchemeColor: SchemeColor.primary,
      segmentedButtonSchemeColor: SchemeColor.primary,
      segmentedButtonBorderSchemeColor: SchemeColor.primary,
      unselectedToggleIsColored: true,
      sliderValueTinted: true,
      sliderTrackHeight: 5,
      inputDecoratorBorderType: FlexInputBorderType.underline,
      inputDecoratorUnfocusedBorderIsColored: false,
      fabUseShape: true,
      fabAlwaysCircular: true,
      chipRadius: 10,
      popupMenuRadius: 6,
      popupMenuElevation: 6,
      alignedDropdown: true,
      useInputDecoratorThemeInDialogs: true,
      drawerWidth: 280,
      drawerIndicatorSchemeColor: SchemeColor.primary,
      bottomNavigationBarMutedUnselectedLabel: false,
      bottomNavigationBarMutedUnselectedIcon: false,
      menuRadius: 6,
      menuElevation: 6,
      menuBarRadius: 0,
      menuBarElevation: 1,
      navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
      navigationBarMutedUnselectedLabel: false,
      navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationBarMutedUnselectedIcon: false,
      navigationBarIndicatorSchemeColor: SchemeColor.primary,
      navigationBarIndicatorOpacity: 1,
      navigationBarElevation: 2,
      navigationBarHeight: 70,
      navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
      navigationRailMutedUnselectedLabel: false,
      navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationRailMutedUnselectedIcon: false,
      navigationRailIndicatorSchemeColor: SchemeColor.primary,
      navigationRailIndicatorOpacity: 1,
    ),
    keyColors: const FlexKeyColors(
      useTertiary: true,
      keepPrimary: true,
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    useMaterial3: true,
    swapLegacyOnMaterial3: true,
    // Font is chosen by the user.
    fontFamily: cFont.value,
  );
});
